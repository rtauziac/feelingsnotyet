[gd_scene load_steps=42 format=2]

[ext_resource path="res://persons/Stickman.tscn" type="PackedScene" id=1]
[ext_resource path="res://persons/SpriteSmogShader.tres" type="Shader" id=2]
[ext_resource path="res://testing/CheckClick.gd" type="Script" id=3]
[ext_resource path="res://devil/Devil.gd" type="Script" id=4]
[ext_resource path="res://devil/halo.png" type="Texture" id=5]
[ext_resource path="res://devil/Shard.tscn" type="PackedScene" id=6]

[sub_resource type="ShaderMaterial" id=1]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/smogFactor = 0.0

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/smogFactor = 0.0

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/smogFactor = 0.0

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/smogFactor = 0.0

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/smogFactor = 0.0

[sub_resource type="Gradient" id=19]
offsets = PoolRealArray( 0, 0.4625, 0.516667, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=20]
gradient = SubResource( 19 )

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = SubResource( 20 )

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 1

[sub_resource type="VisualShaderNodeColorUniform" id=23]
uniform_name = "baseColor"

[sub_resource type="VisualShaderNodeVectorOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=25]
function = 31

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "alpha"

[sub_resource type="VisualShaderNodeScalarOp" id=27]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=28]

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=30]

[sub_resource type="OpenSimplexNoise" id=9]

[sub_resource type="NoiseTexture" id=10]
seamless = true
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeScalarOp" id=33]
default_input_values = [ 0, 0.0, 1, 0.8 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=34]
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=35]
constant = 0.6

[sub_resource type="VisualShaderNodeVectorOp" id=36]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=37]
constant = 0.4

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=14]
constant = 0.2

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeTexture" id=17]
source = 2
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShader" id=6]
code = "shader_type canvas_item;
uniform vec4 baseColor : hint_color;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_10;
uniform float alpha;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:12
	vec3 n_out12p0 = baseColor.rgb;
	float n_out12p1 = baseColor.a;

// Input:18
	vec3 n_out18p0 = vec3(UV, 0.0);

// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// Input:3
	float n_out3p0 = TIME;

// Scalar:5
	float n_out5p0 = 0.200000;

// ScalarOp:4
	float n_out4p0 = n_out3p0 * n_out5p0;

// VectorOp:7
	vec3 n_out7p0 = n_out6p0 + vec3(n_out4p0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out7p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Scalar:25
	float n_out25p0 = 0.600000;

// VectorOp:24
	vec3 n_out24p0 = n_out2p0 - vec3(n_out25p0);

// Scalar:27
	float n_out27p0 = 0.400000;

// VectorOp:26
	vec3 n_out26p0 = n_out24p0 * vec3(n_out27p0);

// VectorOp:19
	vec3 n_out19p0 = n_out18p0 + n_out26p0;

// Texture:8
	vec3 n_out8p0;
	float n_out8p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out19p0.xy);
		n_out8p0 = _tex_read.rgb;
		n_out8p1 = _tex_read.a;
	}

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, n_out2p0.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// VectorOp:9
	vec3 n_out9p0 = n_out8p0 * n_out10p0;

// VectorOp:13
	vec3 n_out13p0 = n_out12p0 * n_out9p0;

// ScalarUniform:15
	float n_out15p0 = alpha;

// ScalarClamp:17
	float n_in17p1 = 0.00000;
	float n_in17p2 = 1.00000;
	float n_out17p0 = clamp(n_out15p0, n_in17p1, n_in17p2);

// ScalarOp:23
	float n_in23p1 = 0.80000;
	float n_out23p0 = n_out17p0 * n_in23p1;

// ScalarFunc:14
	float n_out14p0 = 1.0 - dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:11
	float n_out11p0 = n_out8p1 - n_out14p0;

// ScalarOp:16
	float n_out16p0 = n_out23p0 * n_out11p0;

// Output:0
	COLOR.rgb = n_out13p0;
	COLOR.a = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2323.13, -264.27 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1032, -192 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -493, 157 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -1131, 297 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -912, 343 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( -1214, 410 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -904, 270 )
nodes/fragment/7/node = SubResource( 16 )
nodes/fragment/7/position = Vector2( -708, 312 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( -226, -37 )
nodes/fragment/9/node = SubResource( 18 )
nodes/fragment/9/position = Vector2( 40, -39 )
nodes/fragment/10/node = SubResource( 21 )
nodes/fragment/10/position = Vector2( -303, 160 )
nodes/fragment/11/node = SubResource( 22 )
nodes/fragment/11/position = Vector2( 130, 91 )
nodes/fragment/12/node = SubResource( 23 )
nodes/fragment/12/position = Vector2( 39, -160 )
nodes/fragment/13/node = SubResource( 24 )
nodes/fragment/13/position = Vector2( 229, -108 )
nodes/fragment/14/node = SubResource( 25 )
nodes/fragment/14/position = Vector2( -90, 152 )
nodes/fragment/15/node = SubResource( 26 )
nodes/fragment/15/position = Vector2( 238, -248 )
nodes/fragment/16/node = SubResource( 27 )
nodes/fragment/16/position = Vector2( 819, -180 )
nodes/fragment/17/node = SubResource( 28 )
nodes/fragment/17/position = Vector2( 424, -220 )
nodes/fragment/18/node = SubResource( 29 )
nodes/fragment/18/position = Vector2( -651, -104 )
nodes/fragment/19/node = SubResource( 30 )
nodes/fragment/19/position = Vector2( -462, -53 )
nodes/fragment/23/node = SubResource( 33 )
nodes/fragment/23/position = Vector2( 611, -243 )
nodes/fragment/24/node = SubResource( 34 )
nodes/fragment/24/position = Vector2( -951.127, -2.2699 )
nodes/fragment/25/node = SubResource( 35 )
nodes/fragment/25/position = Vector2( -1208.13, 39.7301 )
nodes/fragment/26/node = SubResource( 36 )
nodes/fragment/26/position = Vector2( -706.127, -20.2699 )
nodes/fragment/27/node = SubResource( 37 )
nodes/fragment/27/position = Vector2( -976.127, 168.73 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 5, 0, 4, 1, 6, 0, 7, 0, 4, 0, 7, 1, 7, 0, 2, 0, 8, 0, 9, 0, 2, 0, 10, 0, 10, 0, 9, 1, 12, 0, 13, 0, 9, 0, 13, 1, 13, 0, 0, 0, 10, 0, 14, 0, 14, 0, 11, 1, 11, 0, 16, 1, 16, 0, 0, 1, 15, 0, 17, 0, 18, 0, 19, 0, 19, 0, 8, 0, 17, 0, 23, 0, 23, 0, 16, 0, 8, 1, 11, 0, 2, 0, 24, 0, 25, 0, 24, 1, 24, 0, 26, 0, 26, 0, 19, 1, 27, 0, 26, 1 )

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/baseColor = Color( 0.866667, 0.866667, 0.866667, 1 )
shader_param/alpha = 1.0

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/smogFactor = 0.0

[node name="2DRoot" type="Node2D"]

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2( 640, 384 )
rotating = true
current = true
smoothing_enabled = true

[node name="Persons" type="Node2D" parent="."]
script = ExtResource( 3 )

[node name="Person" parent="Persons" instance=ExtResource( 1 )]
material = SubResource( 1 )
position = Vector2( 131.782, 56 )
siblingpaths = [ NodePath("../Person2"), NodePath("../Person3"), NodePath("../Person4") ]
is_open = true

[node name="Person2" parent="Persons" instance=ExtResource( 1 )]
material = SubResource( 2 )
position = Vector2( 274.559, 112.329 )
siblingpaths = [ NodePath("../Person"), NodePath("../Person3"), NodePath("../Person6") ]

[node name="Person3" parent="Persons" instance=ExtResource( 1 )]
material = SubResource( 3 )
position = Vector2( 28, 372 )

[node name="Person4" parent="Persons" instance=ExtResource( 1 )]
material = SubResource( 4 )
position = Vector2( 615, 91 )

[node name="Person5" parent="Persons" instance=ExtResource( 1 )]
material = SubResource( 5 )
position = Vector2( 504, 352 )
is_open = true

[node name="Devil" type="Node2D" parent="Persons/Person5"]
position = Vector2( 39, 52 )
z_index = -1
script = ExtResource( 4 )
__meta__ = {
"_edit_group_": true
}
shardScene = ExtResource( 6 )

[node name="DepressFog" type="Sprite" parent="Persons/Person5/Devil"]
material = SubResource( 7 )
texture = ExtResource( 5 )

[node name="Person6" parent="Persons" instance=ExtResource( 1 )]
material = SubResource( 8 )
position = Vector2( 380, 451 )
siblingpaths = [ NodePath("../Person3"), NodePath("../Person4"), NodePath("../Person5") ]
