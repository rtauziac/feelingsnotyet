[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
source = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "ColorRamp"
texture_type = 1
color_default = 1

[resource]
code = "shader_type canvas_item;
uniform sampler2D ColorRamp : hint_black_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(ColorRamp, n_out2p0.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -432, -50.75 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -126, 143.25 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 121, 74.25 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 2, 0, 4, 0 )
