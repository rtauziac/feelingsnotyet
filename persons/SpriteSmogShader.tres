[gd_resource type="VisualShader" load_steps=43 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "smogFactor"

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=7]

[sub_resource type="VisualShaderNodeColorConstant" id=8]
constant = Color( 0.277344, 0.277344, 0.277344, 1 )

[sub_resource type="OpenSimplexNoise" id=9]

[sub_resource type="NoiseTexture" id=10]
seamless = true
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
output_port_for_preview = 0
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeScalarClamp" id=12]

[sub_resource type="VisualShaderNodeColorOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=14]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=16]
constant = Vector3( 1280, 768, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=18]
constant = 0.005

[sub_resource type="VisualShaderNodeScalarOp" id=19]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 6

[sub_resource type="VisualShaderNodeSwitch" id=20]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "texture"

[sub_resource type="VisualShaderNodeCompare" id=22]
function = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=23]

[sub_resource type="VisualShaderNodeUniformRef" id=24]
uniform_name = "smogFactor"

[sub_resource type="VisualShaderNodeUniformRef" id=25]
uniform_name = "smogFactor"

[sub_resource type="VisualShaderNodeTexture" id=26]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id=27]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 2, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=28]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeTransformVecMult" id=30]

[sub_resource type="VisualShaderNodeTexture" id=31]
source = 5

[sub_resource type="VisualShaderNodeTransformConstant" id=32]
constant = Transform( 1, 0.2, 0, -0.08, 1, 0, 0, 0, 1, -0.2, -0.4, 0 )

[sub_resource type="VisualShaderNodeScalarConstant" id=33]
constant = 1.5

[sub_resource type="VisualShaderNodeInput" id=34]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=35]

[sub_resource type="VisualShaderNodeScalarOp" id=36]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=37]
default_input_values = [ 0, -0.1, 1, 0.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=38]

[sub_resource type="VisualShaderNodeInput" id=39]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=40]
default_input_values = [ 0, 0.0, 1, 0.6 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=41]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=42]

[resource]
code = "shader_type canvas_item;
uniform float smogFactor;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:13
	vec3 n_out13p0 = vec3(UV, 0.0);

// Input:8
	vec3 n_out8p0 = vec3(SCREEN_UV, 0.0);

// Vector:25
	vec3 n_out25p0 = vec3(1280.000000, 768.000000, 0.000000);

// Scalar:27
	float n_out27p0 = 0.005000;

// VectorOp:26
	vec3 n_out26p0 = n_out25p0 * vec3(n_out27p0);

// VectorOp:24
	vec3 n_out24p0 = n_out8p0 * n_out26p0;

// Input:6
	float n_out6p0 = TIME;

// ScalarOp:7
	float n_in7p1 = 0.60000;
	float n_out7p0 = n_out6p0 * n_in7p1;

// VectorOp:9
	vec3 n_out9p0 = n_out24p0 + vec3(n_out7p0);

// VectorOp:23
	vec3 n_in23p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out23p0 = n_out9p0 + n_in23p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out23p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// UniformRef:33
	float n_out33p0 = smogFactor;

// ScalarClamp:20
	float n_in20p1 = 0.00000;
	float n_in20p2 = 1.00000;
	float n_out20p0 = clamp(n_out33p0, n_in20p1, n_in20p2);

// ScalarOp:17
	float n_in17p1 = 0.20000;
	float n_out17p0 = n_out20p0 * n_in17p1;

// VectorOp:10
	vec3 n_out10p0 = n_out2p0 * vec3(n_out17p0);

// VectorOp:5
	vec3 n_out5p0 = n_out13p0 + n_out10p0;

// ScalarOp:15
	float n_in15p1 = 2.00000;
	float n_out15p0 = n_out17p0 / n_in15p1;

// VectorOp:14
	vec3 n_out14p0 = n_out5p0 - vec3(n_out15p0);

// Input:3

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out14p0.xy);
		n_out4p0 = TEXTURE_tex_read.rgb;
		n_out4p1 = TEXTURE_tex_read.a;
	}

// Compare:30
	float n_in30p1 = 0.00000;
	bool n_out30p0 = n_out4p1>n_in30p1;

// Color:19
	vec3 n_out19p0 = vec3(0.277344, 0.277344, 0.277344);
	float n_out19p1 = 1.000000;

// ColorOp:21
	vec3 n_out21p0 = min(n_out4p0, n_out19p0);

// UniformRef:32
	float n_out32p0 = smogFactor;

// ScalarClamp:31
	float n_in31p1 = 0.00000;
	float n_in31p2 = 1.00000;
	float n_out31p0 = clamp(n_out32p0, n_in31p1, n_in31p2);

// VectorMix:18
	vec3 n_out18p0 = mix(n_out4p0, n_out21p0, vec3(n_out31p0));

// Color:36
	vec3 n_out36p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out36p1 = 1.000000;

// VectorSwitch:29
	vec3 n_out29p0;
	if(n_out30p0)
	{
		n_out29p0 = n_out18p0;
	}
	else
	{
		n_out29p0 = n_out36p0;
	}

// Transform:40
	mat4 n_out40p0 = mat4(vec4(1.000000, -0.080000, 0.000000, 0.0), vec4(0.200000, 1.000000, 0.000000, 0.0), vec4(0.000000, 0.000000, 1.000000, 0.0), vec4(-0.200000, -0.400000, 0.000000, 1.0));

// TransformVectorMult:39
	vec3 n_out39p0 = (n_out40p0 * vec4(n_out14p0, 1.0)).xyz;

// VectorOp:35
	vec3 n_in35p1 = vec3(1.00000, 2.00000, 1.00000);
	vec3 n_out35p0 = n_out39p0 * n_in35p1;

// Scalar:41
	float n_out41p0 = 1.500000;

// Texture:34
	vec3 n_out34p0;
	float n_out34p1;
	{
		vec4 TEXTURE_tex_read = textureLod(TEXTURE, n_out35p0.xy, n_out41p0);
		n_out34p0 = TEXTURE_tex_read.rgb;
		n_out34p1 = TEXTURE_tex_read.a;
	}

// Input:42
	vec3 n_out42p0 = vec3(UV, 0.0);

// VectorDecompose:43
	float n_out43p0 = n_out42p0.x;
	float n_out43p1 = n_out42p0.y;
	float n_out43p2 = n_out42p0.z;

// ScalarOp:44
	float n_in44p1 = 0.50000;
	float n_out44p0 = n_out43p1 * n_in44p1;

// ScalarOp:45
	float n_in45p0 = -0.10000;
	float n_out45p0 = n_in45p0 + n_out44p0;

// ScalarOp:38
	float n_out38p0 = n_out34p1 * n_out45p0;

// ScalarOp:28
	float n_out28p0 = max(n_out4p1, n_out38p0);

// Output:0
	COLOR.rgb = n_out29p0;
	COLOR.a = n_out28p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1033.79, -357.32 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1972, 313 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -788, -22 )
nodes/fragment/3/node = SubResource( 21 )
nodes/fragment/3/position = Vector2( -21, 295 )
nodes/fragment/4/node = SubResource( 31 )
nodes/fragment/4/position = Vector2( 243, 171 )
nodes/fragment/5/node = SubResource( 38 )
nodes/fragment/5/position = Vector2( -191, 71 )
nodes/fragment/6/node = SubResource( 39 )
nodes/fragment/6/position = Vector2( -1593, -33 )
nodes/fragment/7/node = SubResource( 40 )
nodes/fragment/7/position = Vector2( -1416, -48 )
nodes/fragment/8/node = SubResource( 41 )
nodes/fragment/8/position = Vector2( -1738, -307 )
nodes/fragment/9/node = SubResource( 42 )
nodes/fragment/9/position = Vector2( -1227, -94 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -384, 129 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -378, 23 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( -10, 166 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( -272, 258 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( -1273.86, 350.856 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( -567, 260.25 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( 575.36, 272.49 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( 200, 384.25 )
nodes/fragment/20/node = SubResource( 12 )
nodes/fragment/20/position = Vector2( -831, 344.25 )
nodes/fragment/21/node = SubResource( 13 )
nodes/fragment/21/position = Vector2( 354, 336.25 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -1017.13, -2.2699 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( -1483.13, -221.27 )
nodes/fragment/25/node = SubResource( 16 )
nodes/fragment/25/position = Vector2( -2129.13, -213.27 )
nodes/fragment/26/node = SubResource( 17 )
nodes/fragment/26/position = Vector2( -1746.13, -193.27 )
nodes/fragment/27/node = SubResource( 18 )
nodes/fragment/27/position = Vector2( -2007.13, -105.27 )
nodes/fragment/28/node = SubResource( 19 )
nodes/fragment/28/position = Vector2( 1650, -188.8 )
nodes/fragment/29/node = SubResource( 20 )
nodes/fragment/29/position = Vector2( 908.6, 202.92 )
nodes/fragment/30/node = SubResource( 22 )
nodes/fragment/30/position = Vector2( 691.92, 126.48 )
nodes/fragment/31/node = SubResource( 23 )
nodes/fragment/31/position = Vector2( 369, 482.25 )
nodes/fragment/32/node = SubResource( 24 )
nodes/fragment/32/position = Vector2( 14, 495 )
nodes/fragment/33/node = SubResource( 25 )
nodes/fragment/33/position = Vector2( -1104, 354 )
nodes/fragment/34/node = SubResource( 26 )
nodes/fragment/34/position = Vector2( 493, -153 )
nodes/fragment/35/node = SubResource( 27 )
nodes/fragment/35/position = Vector2( 262.888, -146.998 )
nodes/fragment/36/node = SubResource( 28 )
nodes/fragment/36/position = Vector2( 762.783, 327.444 )
nodes/fragment/38/node = SubResource( 29 )
nodes/fragment/38/position = Vector2( 1380.21, -184.07 )
nodes/fragment/39/node = SubResource( 30 )
nodes/fragment/39/position = Vector2( -59.7918, -146.07 )
nodes/fragment/40/node = SubResource( 32 )
nodes/fragment/40/position = Vector2( -469.792, -203.07 )
nodes/fragment/41/node = SubResource( 33 )
nodes/fragment/41/position = Vector2( 166.208, -2.32001 )
nodes/fragment/42/node = SubResource( 34 )
nodes/fragment/42/position = Vector2( 622.208, 18.68 )
nodes/fragment/43/node = SubResource( 35 )
nodes/fragment/43/position = Vector2( 786.208, -16.32 )
nodes/fragment/44/node = SubResource( 36 )
nodes/fragment/44/position = Vector2( 995.208, -11.32 )
nodes/fragment/45/node = SubResource( 37 )
nodes/fragment/45/position = Vector2( 1192.21, -66.32 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 2, 6, 0, 7, 0, 2, 0, 10, 0, 10, 0, 5, 1, 13, 0, 5, 0, 5, 0, 14, 0, 14, 0, 4, 0, 15, 0, 14, 1, 17, 0, 15, 0, 17, 0, 10, 1, 4, 0, 18, 0, 20, 0, 17, 0, 4, 0, 21, 0, 19, 0, 21, 1, 21, 0, 18, 1, 9, 0, 23, 0, 23, 0, 2, 0, 7, 0, 9, 1, 8, 0, 24, 0, 24, 0, 9, 0, 25, 0, 26, 0, 26, 0, 24, 1, 27, 0, 26, 1, 4, 1, 28, 0, 28, 0, 0, 1, 29, 0, 0, 0, 18, 0, 29, 1, 4, 1, 30, 0, 30, 0, 29, 0, 31, 0, 18, 2, 32, 0, 31, 0, 33, 0, 20, 0, 35, 0, 34, 0, 36, 0, 29, 2, 3, 0, 34, 2, 34, 1, 38, 0, 38, 0, 28, 1, 14, 0, 39, 1, 40, 0, 39, 0, 39, 0, 35, 0, 41, 0, 34, 1, 42, 0, 43, 0, 43, 1, 44, 0, 45, 0, 38, 1, 44, 0, 45, 1 )
