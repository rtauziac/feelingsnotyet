[gd_resource type="VisualShader" load_steps=26 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "smogFactor"

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=7]

[sub_resource type="VisualShaderNodeColorConstant" id=8]
constant = Color( 0.277344, 0.277344, 0.277344, 1 )

[sub_resource type="OpenSimplexNoise" id=9]

[sub_resource type="NoiseTexture" id=10]
seamless = true
noise = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=11]
output_port_for_preview = 0
texture = SubResource( 10 )

[sub_resource type="VisualShaderNodeScalarClamp" id=12]

[sub_resource type="VisualShaderNodeColorOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=22]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=24]
constant = Vector3( 1280, 768, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=25]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=26]
constant = 0.005

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=15]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 0.0, 1, 0.6 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=20]

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;
uniform float smogFactor;



void vertex() {
// Output:0

}

void fragment() {
// Input:13
	vec3 n_out13p0 = vec3(UV, 0.0);

// Input:8
	vec3 n_out8p0 = vec3(SCREEN_UV, 0.0);

// Vector:25
	vec3 n_out25p0 = vec3(1280.000000, 768.000000, 0.000000);

// Scalar:27
	float n_out27p0 = 0.005000;

// VectorOp:26
	vec3 n_out26p0 = n_out25p0 * vec3(n_out27p0);

// VectorOp:24
	vec3 n_out24p0 = n_out8p0 * n_out26p0;

// Input:6
	float n_out6p0 = TIME;

// ScalarOp:7
	float n_in7p1 = 0.60000;
	float n_out7p0 = n_out6p0 * n_in7p1;

// VectorOp:9
	vec3 n_out9p0 = n_out24p0 + vec3(n_out7p0);

// VectorOp:23
	vec3 n_in23p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out23p0 = n_out9p0 + n_in23p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out23p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarUniform:16
	float n_out16p0 = smogFactor;

// ScalarClamp:20
	float n_in20p1 = 0.00000;
	float n_in20p2 = 1.00000;
	float n_out20p0 = clamp(n_out16p0, n_in20p1, n_in20p2);

// ScalarOp:17
	float n_in17p1 = 0.20000;
	float n_out17p0 = n_out20p0 * n_in17p1;

// VectorOp:10
	vec3 n_out10p0 = n_out2p0 * vec3(n_out17p0);

// VectorOp:5
	vec3 n_out5p0 = n_out13p0 + n_out10p0;

// ScalarOp:15
	float n_in15p1 = 2.00000;
	float n_out15p0 = n_out17p0 / n_in15p1;

// VectorOp:14
	vec3 n_out14p0 = n_out5p0 - vec3(n_out15p0);

// Input:3

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, n_out14p0.xy);
		n_out4p0 = TEXTURE_tex_read.rgb;
		n_out4p1 = TEXTURE_tex_read.a;
	}

// Color:19
	vec3 n_out19p0 = vec3(0.277344, 0.277344, 0.277344);
	float n_out19p1 = 1.000000;

// ColorOp:21
	vec3 n_out21p0 = min(n_out4p0, n_out19p0);

// VectorMix:18
	vec3 n_out18p0 = mix(n_out4p0, n_out21p0, vec3(n_out20p0));

// Output:0
	COLOR.rgb = n_out18p0;
	COLOR.a = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2323.13, -264.27 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 781, 300 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -788, -22 )
nodes/fragment/3/node = SubResource( 14 )
nodes/fragment/3/position = Vector2( -22, 333 )
nodes/fragment/4/node = SubResource( 15 )
nodes/fragment/4/position = Vector2( 197, 268 )
nodes/fragment/5/node = SubResource( 16 )
nodes/fragment/5/position = Vector2( -191, 71 )
nodes/fragment/6/node = SubResource( 17 )
nodes/fragment/6/position = Vector2( -1593, -33 )
nodes/fragment/7/node = SubResource( 18 )
nodes/fragment/7/position = Vector2( -1416, -48 )
nodes/fragment/8/node = SubResource( 19 )
nodes/fragment/8/position = Vector2( -1738, -307 )
nodes/fragment/9/node = SubResource( 20 )
nodes/fragment/9/position = Vector2( -1227, -94 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -384, 129 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -378, 23 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( -19, 167 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( -272, 258 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( -1053, 346 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( -567, 260.25 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( 600, 379.25 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( 140, 476.25 )
nodes/fragment/20/node = SubResource( 12 )
nodes/fragment/20/position = Vector2( -831, 344.25 )
nodes/fragment/21/node = SubResource( 13 )
nodes/fragment/21/position = Vector2( 409, 406.25 )
nodes/fragment/23/node = SubResource( 22 )
nodes/fragment/23/position = Vector2( -1017.13, -2.2699 )
nodes/fragment/24/node = SubResource( 23 )
nodes/fragment/24/position = Vector2( -1483.13, -221.27 )
nodes/fragment/25/node = SubResource( 24 )
nodes/fragment/25/position = Vector2( -2129.13, -213.27 )
nodes/fragment/26/node = SubResource( 25 )
nodes/fragment/26/position = Vector2( -1746.13, -193.27 )
nodes/fragment/27/node = SubResource( 26 )
nodes/fragment/27/position = Vector2( -2007.13, -105.27 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 2, 4, 1, 0, 1, 6, 0, 7, 0, 2, 0, 10, 0, 10, 0, 5, 1, 13, 0, 5, 0, 5, 0, 14, 0, 14, 0, 4, 0, 15, 0, 14, 1, 17, 0, 15, 0, 17, 0, 10, 1, 18, 0, 0, 0, 4, 0, 18, 0, 16, 0, 20, 0, 20, 0, 18, 2, 20, 0, 17, 0, 4, 0, 21, 0, 19, 0, 21, 1, 21, 0, 18, 1, 9, 0, 23, 0, 23, 0, 2, 0, 7, 0, 9, 1, 8, 0, 24, 0, 24, 0, 9, 0, 25, 0, 26, 0, 26, 0, 24, 1, 27, 0, 26, 1 )
